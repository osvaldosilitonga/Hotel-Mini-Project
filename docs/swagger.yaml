basePath: /v1
definitions:
  dto.CancelOrderResponse:
    properties:
      data:
        $ref: '#/definitions/dto.OrderData'
      message:
        type: string
    type: object
  dto.CreateOrderResponse:
    properties:
      data:
        $ref: '#/definitions/dto.OrderData'
      message:
        type: string
    type: object
  dto.LoginBody:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.LoginResponse:
    properties:
      access_token:
        type: string
      message:
        type: string
    type: object
  dto.OrderBody:
    properties:
      adult:
        minimum: 1
        type: integer
      check_in:
        type: string
      check_out:
        type: string
      child:
        type: integer
      room_id:
        type: integer
    required:
    - adult
    - check_in
    - check_out
    - room_id
    type: object
  dto.OrderData:
    properties:
      adult:
        type: integer
      amount:
        type: integer
      check_in:
        type: string
      check_out:
        type: string
      child:
        type: integer
      created_at:
        type: string
      order_id:
        type: integer
      room_id:
        type: integer
      status:
        type: string
      updated_at:
        type: string
    type: object
  dto.RegisterBody:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  dto.RegisterResponse:
    properties:
      data:
        $ref: '#/definitions/entity.Users'
      message:
        type: string
    type: object
  dto.RoomsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.Rooms'
        type: array
      message:
        type: string
    type: object
  dto.UserOrderByIdResponse:
    properties:
      data:
        $ref: '#/definitions/dto.OrderData'
      message:
        type: string
    type: object
  entity.Rooms:
    properties:
      category:
        type: string
      id:
        type: integer
      price:
        type: integer
      room_number:
        type: integer
    type: object
  entity.Users:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      saldo:
        type: integer
    type: object
  helpers.APIError:
    properties:
      code:
        type: integer
      detail: {}
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: osvaldosilitonga@gmail.com
    name: Osvaldo Silitonga
    url: https://github.com/osvaldosilitonga
  description: Mini project Hotel API (FTGO-P2)
  title: Hotel API (Mini Project)
  version: BETA
paths:
  /login:
    post:
      consumes:
      - application/json
      description: login by giving user credential in request body
      parameters:
      - description: User Credential
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      summary: Login
      tags:
      - User
  /register:
    post:
      consumes:
      - application/json
      description: register by giving user information in request body
      parameters:
      - description: User Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      summary: Register
      tags:
      - User
  /rooms:
    get:
      consumes:
      - application/json
      description: get all available room
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RoomsResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      summary: Get Rooms
      tags:
      - User
  /user/orders:
    post:
      consumes:
      - application/json
      description: create new order by giving order information in request body
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Order Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.OrderBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.CreateOrderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      summary: Create Order
      tags:
      - User
  /user/orders/:id:
    get:
      consumes:
      - application/json
      description: cancel user order by giving order id in request param
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Order ID
        in: path
        name: OrderID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CancelOrderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      summary: Cancel User Order
      tags:
      - User
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
